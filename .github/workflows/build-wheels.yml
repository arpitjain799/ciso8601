name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'The tag to use for this release (e.g., `v2.3.0`)'
        required: true

jobs:
  sanity_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo "ciso8601_version=`grep -Po 'VERSION = "\K[^"]*' setup.py`" >> $GITHUB_ENV
          echo "Requested release tag ${{ github.event.inputs.release_tag }}"
          echo "VERSION in setup.py   ${{ env.ciso8601_version }}"
          false
      # TODO: Verify that the `release_tag` matches the VERSION in setup.py
      # TODO: Verify that the `release_tag` is different than the existing release in PyPI
      # TODO: Verify that the `release_tag` is larger/newer than the existing release in PyPI
      # TODO: Verify that the `release_tag` is present in the CHANGELOG

  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    needs: [sanity_check]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.3
        env:
          CIBW_SKIP: "pp*-macosx* *-win32 *-manylinux_i686"
          CIBW_ARCHS_MACOS: x86_64 arm64 universal2

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    needs: [sanity_check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  # upload_to_pypi:
  #   name: Upload wheels to PyPI
  #   needs: [build_wheels, build_sdist, sanity_check]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_PASSWORD }}
  #         # repository_url: https://test.pypi.org/legacy/ # Test PyPI

  # create_release:
  #   name: Create release in GitHub
  #   needs: [upload_to_pypi]
  #   runs-on: ubuntu-latest
  #   steps:  # TODO
  #     - run: |
  #         echo "We're doing a release!? ${{ github.event }}"