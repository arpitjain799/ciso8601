name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'If provided, we will attempt to upload to PyPI using the information from the GitHub release with this name.'
        required: false
  # release:
  #   types: [published]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.1.3
      env:
        CIBW_SKIP: "pp*-macosx* *-win32 *-manylinux_i686"
        CIBW_ARCHS_MACOS: x86_64 arm64 universal2

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  release_sanity_check:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'release' && github.event.type == 'published') || github.event.inputs.release_tag }}
    steps:
      - run: |
          echo "We're doing a release!? ${{ github.event }}"
          echo "${{ github.event.release.tag_name || github.event.inputs.release_tag }}"
      # TODO: Verify that the `tag_name` matches the `name`
      # TODO: Verify that the `tag_name` matches the VERSION in setup.py
      # TODO: Verify that the `tag_name` matches the filenames in the artifacts
      # TODO: Verify that the `tag_name` is different than the existing release in PyPI
      # TODO: Verify that the `tag_name` is larger/newer than the existing release in PyPI
      # TODO: Verify that the `tag_name` is present in the CHANGELOG

  # upload_to_pypi:
  #   needs: [build_wheels, build_sdist, release_sanity_check]
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event_name == 'release' && github.event.type == 'published' }}
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist
  #
  #     - uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_PASSWORD }}
  #         # To test: repository_url: https://test.pypi.org/legacy/